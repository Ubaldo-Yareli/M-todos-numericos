{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Ubaldo-Yareli/M-todos-numericos/blob/main/Polinomio%20de%20McLaurin\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy as spy\n",
        "\n",
        "x = spy.Symbol('x')\n",
        "g=spy.exp(x/2)*spy.sin(x/3)\n",
        "# Calcular la primera derivada\n",
        "f_uno= spy.diff(g, x)\n",
        "print(g)\n",
        "print(f_uno)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d2DExEnKJRYA",
        "outputId": "274374f1-0244-40ec-e355-8bc4bffae61c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "exp(x/2)*sin(x/3)\n",
            "exp(x/2)*sin(x/3)/2 + exp(x/2)*cos(x/3)/3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calcular la segunda derivada\n",
        "f_dos= spy.diff(f_uno, x)\n",
        "print(f_dos)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hBAULMDfLWn-",
        "outputId": "653eee74-b1e6-46dc-d88f-3a514643d61d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5*exp(x/2)*sin(x/3)/36 + exp(x/2)*cos(x/3)/3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Calcular la tercera derivada\n",
        "f_tres= spy.diff(f_dos, x)\n",
        "print(f_tres)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HBW-YQKmLT9H",
        "outputId": "aabfc02d-3e66-4a1f-c81d-f3dcfa042858"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-exp(x/2)*sin(x/3)/24 + 23*exp(x/2)*cos(x/3)/108\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Calcular la cuarta derivada\n",
        "f_cuatro= spy.diff(f_tres, x)\n",
        "print(f_cuatro)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HroDGIKvLdmG",
        "outputId": "b6fccede-8325-4600-e479-eeccfa572dfd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-119*exp(x/2)*sin(x/3)/1296 + 5*exp(x/2)*cos(x/3)/54\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def f(x):\n",
        "  return np.exp(x/2)*np.sin(x/3)\n",
        "#Crear un rango de valores para x\n",
        "x=np.linspace(-10, 10, 400)\n",
        "\n",
        "def g(x):\n",
        "  return np.1/3*x\n",
        "\n",
        "def h(x):\n",
        "  return np.1/3*x+np.(1/6)*x**2\n",
        "\n",
        "def i(x):\n",
        "  return np.(1/3)*x+np.(1/6)*x**2+np.(1/12)*x**3\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "#Calcular los valores de la función\n",
        "y=f(x)\n",
        "\n",
        "\n",
        "#Graficar la función\n",
        "plt.figure(figsize=(8,6))\n",
        "#plt.plot(x , y, label= )\n",
        "plt.title('Gráfica del polinomio de McLaurin')\n",
        "plt.xlabel('x')\n",
        "plt.ylabel('f(x)')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "\n",
        "plt.plot(x,y)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "WM3SxcrlF3HC",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 107
        },
        "outputId": "3e4c948c-e6ec-4fcf-c332-6b1d82301c9f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "invalid syntax (<ipython-input-18-55a8f58a2a02>, line 10)",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-18-55a8f58a2a02>\"\u001b[0;36m, line \u001b[0;32m10\u001b[0m\n\u001b[0;31m    return np.(1/3)*x\u001b[0m\n\u001b[0m              ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    }
  ]
}